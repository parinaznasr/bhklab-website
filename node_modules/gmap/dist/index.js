'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var _constants = require('./constants');
var querystring = require('querystring');

// the primary gmap function
var gmap = function gmap(query) {
  // empty query
  if (typeof query === 'undefined' || Object.keys(query).length === 0) {
    return _constants.baseUri;
  }
  var daddr = query.daddr;

  var rest = _objectWithoutProperties(query, ['daddr']);

  if (Array.isArray(daddr)) {
    var newDaddr = daddr.map(function (elem) {
      return querystring.escape(elem);
    });
    return _constants.baseUri + '?' + querystring.stringify(rest) + '&daddr=' + newDaddr.join('+to:');
  }

  return _constants.baseUri + '?' + querystring.stringify(query);
};

// a convenience directions wrapper around the default gmap function
var directions = function directions(from, to, q) {
  var query = _extends({
    saddr: from,
    daddr: to
  }, q);
  return gmap(query);
};

module.exports = gmap;
module.exports.directions = directions;